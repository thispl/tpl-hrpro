[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Contractor Employee",
  "enabled": 1,
  "modified": "2021-02-15 15:12:29.406213",
  "name": "Contractor Employee-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Contractor Employee', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tdate_of_birth(frm) {\n\t\tvar age = calculate_age(frm.doc.date_of_birth)\n\t\tif (age < 18) {\n\t\t\tfrappe.msgprint({\n\t\t\t\ttitle: __('Notification'),\n\t\t\t\tindicator: 'red',\n\t\t\t\tmessage: __(\"Age cannot be lesser than 18\")\n\t\t\t});\n\t\t}\n    }\n})\nlet calculate_age = function (birth) {\n    let ageMS = Date.parse(Date()) - Date.parse(birth);\n    let age = new Date();\n    age.setTime(ageMS);\n    let years = age.getFullYear() - 1970;\n    return years\n};"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Contractor",
  "enabled": 0,
  "modified": "2020-12-05 15:11:01.323389",
  "name": "Contractor-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "let calculate_age = function (birth) {\n\tlet ageMS = Date.parse(Date()) - Date.parse(birth);\n\tlet age = new Date();\n\tage.setTime(ageMS);\n\tlet years = age.getFullYear() - 1970;\n\treturn years\n};\nfrappe.ui.form.on('Contractor', {\n\tdate_of_birth(frm) {\n\t\tvar age = calculate_age(frm.doc.date_of_birth)\n\t\tfrm.set_value(\"age\",age)\n\t\tif (age < 18) {\n\t\t\tfrappe.msgprint({\n\t\t\t\ttitle: __('Notification'),\n\t\t\t\tindicator: 'red',\n\t\t\t\tmessage: __(\"Age cannot be lesser than 18\")\n\t\t\t});\n\t\t}\n\n\t},\n\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Contract Labour Form XIII\"), function () {\n\t\t\tvar f_name = frm.doc.name\n\t\t\tvar print_format = \"Contract Labour Form XIII\";\n\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Contractor\")\n\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t));\n\t\t})\n\t\tfrm.add_custom_button(__(\"Particulars of the Contract work\"), function () {\n\t\t\tvar f_name = frm.doc.name\n\t\t\tvar print_format = \"Contractor\";\n\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Contractor\")\n\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t));\n\t\t})\n\t\tfrm.add_custom_button(__(\"Form V\"), function () {\n\t\t\tvar f_name = frm.doc.name\n\t\t\tvar print_format = \"FORM \u2013 V\";\n\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Contractor\")\n\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t));\n\t\t})\n\t},\n// \tcontractor_name(frm){\n// \t    var c=frm.doc.contractor_name;\n// \t    var r=str.charAt(0);\n// \t    console.log(r)\n// \t    frm.set_value(\"contractor_id\",\"r\")\n// \t},\n\tvalidate(frm) {\n\t\tvar regex = /[^A-Za-z\\s]/g;\n\t\tif(frm.doc.initial){\n\t\tif (regex.test(frm.doc.initial) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.initial +\" is not a valid Initial\"));\n\t\t\tfrappe.validated = false;\n\t\t}}\n\t\tif(frm.doc.first_name){\n\t\tif (regex.test(frm.doc.first_name) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.first_name + \" is not a valid First Name\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.middle_name){\n\t\tif (regex.test(frm.doc.middle_name) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.middle_name +\" is not a valid Middle Name\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.last_name){\n\t\tif (regex.test(frm.doc.last_name) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.last_name + \" is not a valid Last Name\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.mothers_name){\n\t\tif (regex.test(frm.doc.mothers_name) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.mothers_name + \"is not a valid Mother's Name\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.fathers_name){\n\t\tif (regex.test(frm.doc.fathers_name) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.fathers_name + \" is not a valid Father's Name\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.street__road){\t\n\t\tif (regex.test(frm.doc.street__road) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.street__road + \" is not a valid Street/Road\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.area__locality){\n\t\tif (regex.test(frm.doc.area__locality) === true) {\n\t\t\tfrappe.msgprint(__( frm.doc.area__locality + \" is not a valid Area/Locality\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\n\t\t}}\n\t\tif(frm.doc.village__town__city){\n\t\tif (regex.test(frm.doc.village__town__city) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.village__town__city +\" is not a valid Village/Town/City\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\t\t$.each(frm.doc.contact_details,function(i,d){\n\t\t    if(d.person_name){\n\t\t\tif (regex.test(d.person_name) === true) {\n\t\t\t\tfrappe.msgprint(__(d.person_name +\" is not a valid Person Name\"));\n\t\t\t\tfrappe.validated = false;\n\t\t\t\tconsole.log(d.person_name)\n\t\t\t}\n\t\t    }\n\t\t})\n\t\t$.each(frm.doc.contact_details,function(i,d){\n\t\t    if(d.designation){\n\t\t    if (regex.test(d.designation) === true) {\n\t\t        frappe.msgprint(__(d.designation +\" is not a valid Designation\"));\n\t\t\t\tfrappe.validated = false;\n\t\t\t\tconsole.log(d.designation)\n\t\t\t} }\n\t})\n\tvar regex = /[^0-9]/g;\n\t    if(frm.doc.aadhaar_uid_number){\n\t\tif (regex.test(frm.doc.aadhaar_uid_number) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.aadhaar_uid_number + \" is not a valid Aadhaar (UID) Number\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\t\tif(frm.doc.pin_code){\n\t\tif (regex.test(frm.doc.pin_code) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.pin_code +\" is not a valid Pin Code\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\t\tif(frm.doc.number_of_female_contract_workers){\n\t\tif (regex.test(frm.doc.number_of_female_contract_workers) === true) {\n\t\t\tfrappe.msgprint(__( frm.doc.number_of_female_contract_workers + \" is not a valid  Number of Female Contract workers\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\t\tif(frm.doc.number_of_male_contract_workers){\n\t\tif (regex.test(frm.doc.number_of_male_contract_workers) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.number_of_male_contract_workers +\" is not a valid  Number of male Contract workers\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\t\tif(frm.doc.maximum_number_of_contract_workers){\n\t\tif (regex.test(frm.doc.maximum_number_of_contract_workers) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.maximum_number_of_contract_workers +\" is not a valid  Maximum Number of Contract workers\"));\n\t\t\tfrappe.validated = false;\n\t\t\t// console.log(\"Initial\")\n\t\t}}\n\tvar regex = /[^0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\n\t    if(frm.doc.landline_phone_number){\n\t\tif (regex.test(frm.doc.landline_phone_number) === true) {\n\t\t\tfrappe.msgprint(__(frm.doc.landline_phone_number +\" is not a valid  Landline Number\"));\n\t\t\tfrappe.validated = false;\n\t\t}}\n\t\tif(frm.doc.mobile_number.length<10){\n\t\t    frappe.msgprint(__(frm.doc.mobile_number) +\" should be 10 digits\")\n\t\t    frappe.validated = false;\n\t\t}\n}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Annual PF",
  "enabled": 0,
  "modified": "2020-11-24 13:25:47.110184",
  "name": "Annual PF-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Annual PF', {\n\trefresh(frm) {\n\t frm.add_custom_button(__(\"Employees Provident Fund Scheme\"), function () {\n                var f_name = frm.doc.name\n                var print_format = \"EPF\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Annual PF\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            })\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2021-02-19 14:24:42.110143",
  "name": "Employee-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "let calculate_age = function (birth) {\n    let ageMS = Date.parse(Date()) - Date.parse(birth);\n    let age = new Date();\n    age.setTime(ageMS);\n    let years = age.getFullYear() - 1970;\n    return years\n};\nfrappe.ui.form.on('Employee', {\n    validate(frm){\n        if(frm.doc.__islocal){\n            if(frm.doc.date_of_joining){\n                frappe.call({\n                    method:\"hrpro.custom.new_employee\",\n                    args:{\n                        \"doj\":frm.doc.date_of_joining,\n                        \"name\":frm.doc.name\n                    },\n                    callback(r){\n                    \n                        if(r.message){\n                            frm.set_value(\"new_employee\",1)\n                            frm.save()\n                        }\n                    }\n                })\n            }\n        }\n    },\n    date_of_birth(frm){\n        var age = calculate_age(frm.doc.date_of_birth)\n        console.log(age)\n        if(age < 18){\n            frappe.throw('Age cannot be lesser thatn 18')\n        }\n        frm.set_value(\"age\",age)\n        frappe.call({\n            \"method\":\"hrpro.custom.get_retirement_date\",\n            \"args\":{\n                \"dob\":frm.doc.date_of_birth\n            },\n            callback(r){\n                frm.set_value(\"date_of_retirement\",r.message)\n            }\n        })\n    },\n\trefresh(frm) {\n// \tfrm.add_custom_button('Gate Pass', () => {\n// \t    console.log('hi')\n//         frappe.call({\n//             method: 'tnc.custom.generate_qr',\n// \t\t\targs: {\n// \t\t\t\t\t\"employee\": frm.doc.employee\n// \t\t\t},\n// \t\t\tcallback: function(r) {\n// \t\t\t\tfrappe.msgprint(\"Downloaded Succesfully\");\n// \t\t\t}\n//         })\n// \t})\n\t},\n\tbasic(frm){\n\t    frm.set_value(\"gross_salary\",Number(frm.doc.basic)+Number(frm.doc.da)+Number(frm.doc.hra)+Number(frm.doc.other_allowance))\n\t},\n\t\tda(frm){\n\t    frm.set_value(\"gross_salary\",Number(frm.doc.basic)+Number(frm.doc.da)+Number(frm.doc.hra)+Number(frm.doc.other_allowance))\n\t},\n\t\thra(frm){\n\t    frm.set_value(\"gross_salary\",Number(frm.doc.basic)+Number(frm.doc.da)+Number(frm.doc.hra)+Number(frm.doc.other_allowance))\n\t},\n\t\tother_allowance(frm){\n\t    frm.set_value(\"gross_salary\",Number(frm.doc.basic)+Number(frm.doc.da)+Number(frm.doc.hra)+Number(frm.doc.other_allowance))\n\t}\n\t\n})"
 }
]